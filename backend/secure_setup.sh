#!/bin/bash

# Script de Setup Seguro - Doces GIamor Backend
# Configura o ambiente com medidas de seguran√ßa

set -e

GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
BLUE='\033[0;34m'
NC='\033[0m'

echo -e "${BLUE}üîí Setup Seguro - Doces GIamor Backend${NC}"
echo "========================================"

# 1. Verificar se .env existe
if [ ! -f ".env" ]; then
    echo -e "${YELLOW}Criando arquivo .env a partir do exemplo...${NC}"
    cp .env.example .env
    echo -e "${GREEN}‚úÖ Arquivo .env criado${NC}"
fi

# 2. Aplicar permiss√µes seguras (tenta com sudo se necess√°rio)
echo -e "\n${YELLOW}Aplicando permiss√µes seguras...${NC}"
if chmod 600 .env 2>/dev/null; then
    echo -e "${GREEN}‚úÖ Permiss√µes aplicadas ao .env${NC}"
else
    echo -e "${YELLOW}‚ö† N√£o foi poss√≠vel alterar permiss√µes (execute: sudo chmod 600 .env)${NC}"
fi

if chmod 600 db.sqlite3 2>/dev/null; then
    echo -e "${GREEN}‚úÖ Permiss√µes aplicadas ao db.sqlite3${NC}"
else
    echo -e "${YELLOW}‚ö† N√£o foi poss√≠vel alterar permiss√µes do banco${NC}"
fi

if chmod 600 config/settings/*.py 2>/dev/null; then
    echo -e "${GREEN}‚úÖ Permiss√µes aplicadas aos arquivos de configura√ß√£o${NC}"
else
    echo -e "${YELLOW}‚ö† N√£o foi poss√≠vel alterar permiss√µes dos settings${NC}"
fi

# 3. Instalar depend√™ncias seguras
echo -e "\n${YELLOW}Instalando depend√™ncias...${NC}"
python3 -m pip install --upgrade pip > /dev/null 2>&1
pip install -r requirements.txt
echo -e "${GREEN}‚úÖ Depend√™ncias instaladas${NC}"

# 4. Verificar configura√ß√µes
echo -e "\n${YELLOW}Verificando configura√ß√µes...${NC}"
python3 manage.py check --settings=config.settings.development
echo -e "${GREEN}‚úÖ Configura√ß√µes Django OK${NC}"

# 5. Executar verifica√ß√£o de seguran√ßa
echo -e "\n${YELLOW}Executando verifica√ß√£o de seguran√ßa...${NC}"
./security_check.sh

echo -e "\n${BLUE}=======================================${NC}"
echo -e "${GREEN}‚úÖ Setup seguro conclu√≠do!${NC}"
echo -e "${BLUE}=======================================${NC}"

echo -e "\n${YELLOW}üìã Pr√≥ximos passos:${NC}"
echo -e "  1. Configure uma SECRET_KEY forte no .env"
echo -e "  2. Use PostgreSQL em produ√ß√£o (n√£o SQLite)"
echo -e "  3. Configure SSL/TLS"
echo -e "  4. Execute migra√ß√µes: python manage.py migrate"
echo -e "  5. Crie superusu√°rio: python manage.py createsuperuser"